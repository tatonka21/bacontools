#!/bin/bash
# Usage: devrestore files ...
# Explode tarballs created with devbup.
#
# Environment variables
# ---------------------
# NAME=documents              Override the default naming scheme (name of the
#                             first file sans its extension).
# GPG_COMMAND=gpg2            Override the default (gpg) GnuPG command.
#
# Requirements
# ------------
# POSIX shell
# echo
# cat
# rev
# file
# tar
# gnupg
#
# TODO: decompression

# NAME if defined, first file sans extension otherwise
NAME="${NAME:-$(echo "$1" | rev | cut -d. -f2- | rev)}"
GPG_COMMAND="${GPG_COMMAND:-gpg}"
RM="rm"

print_command() {
	echo "$@" 1>&2
}

run_command() {
	print_command "$@"
	"$@"
}

trim() {
	sed -e 's/^[[:space:]]*//' | sed -e 's/[[:space:]]*$//'
}

try_verify() {
	SIG_APPEND="$1.sig"
	SIG_REMOVE="$(echo "$1" | rev | cut -d. -f2- | rev)"

	if [ -f "$SIG_APPEND" ] ; then
		gpg --verify "$SIG_APPEND" "$1"
	fi

	if [ -f "$SIG_REMOVE" ] ; then
		gpg --verify "$1" "$SIG_REMOVE"
	fi
}

export -f try_verify

process() {
	# Detect MIME
	MIME="$(file "$1" --mime-type | cut -d: -f2- | trim)"

	if [ "$MIME" = "application/octet-stream" ] ; then
		FILE="$(file "$1")"

		if [ "$(echo "$FILE" | grep -c "keyid: 0 0")" = 1 ]; then
			TRY_ALL_SECRETS="--try-all-secrets"
		fi

		if [ "$(echo "$FILE" | grep -c PGP)" = 1 ] ; then
			run_command "$GPG_COMMAND" $TRY_ALL_SECRETS -o "$NAME.tmp" --decrypt "$NAME"
			run_command "$RM" "$NAME"
			run_command mv "$NAME.tmp" "$NAME"
			process "$1"
		fi
	fi

	if [ "$MIME" = "application/x-tar" ] ; then
		tar -xvf "$NAME" | tr '\n' '\0' | xargs -0 -i bash -c 'echo "{}" ; try_verify "{}"'
	fi

	exit 0
}

run_command touch "$NAME"

# Merge input files
print_command "cat" "$@" "> $NAME"
cat "$@" > "$NAME"

process "$NAME"
