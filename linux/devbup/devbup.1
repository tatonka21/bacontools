.TH devbup 1 "devbup" "14 May 2016" "version 2016-05"

.SH NAME
devbup - file and device backup script

.SH SYNOPSIS
[\fBVAR=value\fP] devbup \fBfile ...\fP

.SH DESCRIPTION
\fBdevbup\fP accepts files (usual files or block devices), creates a tarball,
and splits it. Also, it optionally signs the contents, compresses the tarball,
runs MAT (Metadata Anonymization Toolkit) on it, and encrypts it. It is
configured via environment variables specified in the next section of this man
page.

.SH ENVIRONMENT VARIABLES
.TP
\fBNAME\fP
Override default naming scheme (\fB$(date\~+%s+z).devbup.\fP) with a custom
name.

For instance, \fBNAME=docs.\~devbup\~~/Documents/**txt\fP will create split
files with naming like \fBdocs.aa\fP, \fBdocs.ab\fP, etc).

Can be any non-empty string.

.TP
\fBDD_COMMAND\fP
Use another command instead of \fBdd\fP. \fBdevbup\fP will use the default
syntax with \fBif=sourcefile\fP and \fBof=$(basename\~sourcefile)\fP arguments.

If this variable equals to \fBdcfldd\fP, a \fBstatusinterval\fP option will
also be used to monitor progress, with a default of \fB64\fP.

.TP
\fBDCFLDD_STATINT\fP
Override default \fBstatusinterval\fP argument value for \fBdcfldd\fP, in case
\fBDD_COMMAND\fP is set to \fBdcfldd\fP.

.TP
\fBCKSUM_COMMAND\fP
Override default checksum command (\fBsha512sum\fP) in case it's too slow,
unavailable, or somehow inappropriate.

\fBdevbup\fP will expect the default Linux checksum output syntax, i.e.
\fBCHECKSUM\~\~filepath\fP.

.TP
\fBIGNORE_CKSUMS\fP
When checksums on source and copied files don't match, don't exit or shred all
copied files, and continue as if nothing went wrong.

Can be any non-empty string.

.TP
\fBADD_PADDING\fP
Add a padding file to the tarball. Padding file is read from
\fB/dev/urandom\fP, and has a random size between \fB0\fP and \fB4\fP GiB
(rounded to MiB). Is automatically set when \fBPADDING_SIZE\fP is specified.

Can be any non-empty string.

.TP
\fBPADDING_SIZE\fP
Override default padding file size.

Must be a size specifier accepted by \fBhead\fP.

.TP
\fBRUN_MAT\fP
If \fBmat\fP (Metadata Anonymization Toolkit) is installed in \fBPATH\fP, run
it on the resulting tarball.

.TP
\fBCOMPRESS\fP
Compress the resulting tarball.

Must be one of the following strings:

\fBnone\fP

\fBgzip\fP

.TP
\fBGPG_COMMAND\fP
Override default GnuPG command (\fBgpg\fP).

.TP
\fBSIGN_KEY\fP
Sign every input file with this GnuPG key.

Must be a valid GnuPG user-id.

.TP
\fBDIGEST_ALGO\fP
Override default GnuPG digest algorithm with \fB--digest-algo\fP when signing.

Must be a valid digest algorithm accepted by GnuPG.

.TP
\fBENCRYPT_KEY\fP
Encrypt the resulting tarball with this GnuPG key.

Must be a valid GnuPG user-id.

.TP
\fBHIDE_RECIPIENT\fP
Use \fB--hidden-recipient\fP instead of \fB--recipient\fP when encrypting, so
that the user-id is not leaked.

.TP
\fBSPLIT_SIZE\fP
Override default split size (\fB256M\fP).

Must be a valid size specifier accepted by \fBsplit\fP.

.SH DEPENDENCIES
\fBdd\fP, \fBsha512sum\fP, \fBtar\fP, \fBsplit\fP, \fBgnupg\fP (optional),
\fBgzip\fP (optional)

.SH AUTHOR
Developed by Ilya Terentyev <bacondropped@gmail.com> as a part of the
\fBbacontools\fP package <https://gitlab.com/bacondropped/bacontools>.

.SH LICENSE
\fBdevbup\fP is distributed under the terms of the MIT license.
