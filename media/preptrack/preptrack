#!/bin/bash
#
# TODO: detect redirect, run non-interactively in this case

trim() {
	sed -e 's/^[[:space:]]*//' |  sed -e 's/[[:space:]]*$//'
}

process() {
	DIR="${DIR:-$HOME/Music}"
	FILE="$1"

	echo "Processing file $1"

	MAX_BITRATE="${MAX_BITRATE:-320}"
	DETECTED_BITRATE="$(ffprobe -i "$FILE" 2>&1 | grep Stream | grep Audio | grep kb | head -n1 | grep -oP "(\d+)(?= kb\/s)")"

	ARTIST="$(eyeD3 --rfc822 "$FILE" | grep -oP "(?<=Artist: ).*$" | trim)"
	read -e -p "Artist: " -i "$ARTIST" ARTIST

	ALBUM="$(eyeD3 --rfc822 "$FILE" | grep -oP "(?<=Album: ).*$" | trim)"
	read -e -p "Album: " -i "$ALBUM" ALBUM

	TITLE="$(eyeD3 --rfc822 "$FILE" | grep -oP "(?<=Title: ).*$" | trim)"
	read -e -p "Title: " -i "$TITLE" TITLE

	# Extract embedded pictures
	TMP_PIC_DIR="$(mktemp --directory)"
	eyeD3 --write-images="$TMP_PIC_DIR" "$FILE"
	FIRST_IMG="$(find "$TMP_PIC_DIR" -mindepth 1 | head -1)"

	if [ -n "$FIRST_IMG" ] ; then
		read -e -p "Embedded picture found; preserve it? (y/n) " PRESERVE_PIC
	fi

	if [ -n "$BITRATE" ] ; then
		FINAL_BITRATE="$BITRATE"
	elif [ -n "$MAX_BITRATE" ] ; then
		if [ -n "$DETECTED_BITRATE" ] ; then
			FINAL_BITRATE="$(( DETECTED_BITRATE < MAX_BITRATE ? DETECTED_BITRATE : MAX_BITRATE ))"
		else
			FINAL_BITRATE="$MAX_BITRATE"
		fi
	fi

	read -e -p "Bitrate (kb/s): " -i "$FINAL_BITRATE" FINAL_BITRATE

	if [ -n "$DETECTED_BITRATE" ] && [ "$FINAL_BITRATE" -gt "$DETECTED_BITRATE"  ] ; then
		echo "Warning: encoding with higher bitrate than the source: $FINAL_BITRATE kb/s vs $DETECTED_BITRATE kb/s" 1>&2
	fi

	NEW_FILEPATH="$DIR/$(echo "$ARTIST - $TITLE" | sed 's/\///g').mp3"
	mkdir -p "$DIR"

	ffmpeg -hide_banner -i "$FILE" -b:a "$FINAL_BITRATE"k "$NEW_FILEPATH"

	if [ "$(type mat 1>/dev/zero 2>/dev/zero ; echo $?)" = "0" -a \( -z "$DONT_MAT" \) ]; then
		mat "$NEW_FILEPATH"
		find "$TMP_PIC_DIR" -mindepth 1 -exec mat \{\} \;
	fi

	eyeD3 --remove-all "$NEW_FILEPATH"

	if [ -n "$ARTIST" ] ; then
		eyeD3 --set-encoding=utf8 -a "$ARTIST" "$NEW_FILEPATH"
	fi

	if [ -n "$ALBUM" ] ; then
		eyeD3 --set-encoding=utf8 -A "$ALBUM" "$NEW_FILEPATH"
	fi

	if [ -n "$TITLE" ] ; then
		eyeD3 --set-encoding=utf8 -t "$TITLE" "$NEW_FILEPATH"
	fi

	if [ "$PRESERVE_PIC" = "y" ]; then
		find "$TMP_PIC_DIR" -mindepth 1 -exec bash -c 'eyeD3 --add-image="$1:$(basename "$1" | sed "s/\..*$//g")" "'"$NEW_FILEPATH"'"' funcname '{}' \;
	fi

	stat "$NEW_FILEPATH"
	file "$NEW_FILEPATH"
	eyeD3 "$NEW_FILEPATH"
}

for file in "$@" ; do
	process "$file"
done
